name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

env:
  CI: true
  NODE_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
      - name: 🚀 Checkout 代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📦 使用 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: backend/yarn.lock

      - name: 🔄 启动 MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: 📌 安装依赖
        run: cd backend && yarn install --frozen-lockfile --network-timeout 300000

      - name: 🔍 运行 Lint
        run: cd backend && yarn lint || echo "Linting failed but continuing"

      - name: ✅ 运行测试
        run: cd backend && yarn test
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test_secret
          MONGO_URI: mongodb://localhost:27017/chainintelai_test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Checkout 代码
        uses: actions/checkout@v3

      - name: 📦 使用 Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
          cache-dependency-path: backend/yarn.lock

      - name: 📌 安装依赖
        run: cd backend && yarn install

      - name: 🏗️ 构建
        run: cd backend && yarn build

      - name: 🐳 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 📤 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: 🚀 构建并推送 Docker 镜像
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/chainintelai-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/chainintelai-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/chainintelai-backend:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 远程 SSH 部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/chainintelai-backend:latest
            docker stop chainintel || true
            docker rm chainintel || true
            docker run -d --name chainintel -p 5001:5000 \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e NODE_ENV="production" \
              ${{ secrets.DOCKER_HUB_USERNAME }}/chainintelai-backend:latest
