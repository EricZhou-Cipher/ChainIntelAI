name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_ENV: test
  COVERAGE_THRESHOLD_STATEMENTS: 50
  COVERAGE_THRESHOLD_BRANCHES: 30
  COVERAGE_THRESHOLD_FUNCTIONS: 45
  COVERAGE_THRESHOLD_LINES: 50

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests with coverage
        run: |
          yarn test --coverage
          node tests/generateTestReport.js

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: |
            backend/tests/coverage/coverage-summary.json
            backend/tests/coverage/lcov-report/
            backend/tests/coverage/summary.md
          retention-days: 7

      - name: Check coverage thresholds
        run: |
          COVERAGE=$(cat backend/tests/coverage/coverage-summary.json)
          STATEMENTS=$(echo $COVERAGE | jq -r '.total.statements.pct')
          BRANCHES=$(echo $COVERAGE | jq -r '.total.branches.pct')
          FUNCTIONS=$(echo $COVERAGE | jq -r '.total.functions.pct')
          LINES=$(echo $COVERAGE | jq -r '.total.lines.pct')

          if (( $(echo "$STATEMENTS < $COVERAGE_THRESHOLD_STATEMENTS" | bc -l) )); then
            echo "Statements coverage ($STATEMENTS%) is below threshold ($COVERAGE_THRESHOLD_STATEMENTS%)"
            exit 1
          fi

          if (( $(echo "$BRANCHES < $COVERAGE_THRESHOLD_BRANCHES" | bc -l) )); then
            echo "Branches coverage ($BRANCHES%) is below threshold ($COVERAGE_THRESHOLD_BRANCHES%)"
            exit 1
          fi

          if (( $(echo "$FUNCTIONS < $COVERAGE_THRESHOLD_FUNCTIONS" | bc -l) )); then
            echo "Functions coverage ($FUNCTIONS%) is below threshold ($COVERAGE_THRESHOLD_FUNCTIONS%)"
            exit 1
          fi

          if (( $(echo "$LINES < $COVERAGE_THRESHOLD_LINES" | bc -l) )); then
            echo "Lines coverage ($LINES%) is below threshold ($COVERAGE_THRESHOLD_LINES%)"
            exit 1
          fi
