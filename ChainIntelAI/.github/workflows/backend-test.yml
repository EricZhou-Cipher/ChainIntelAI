name: 后端测试

on:
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
  pull_request:
    branches: [main, develop]
    paths:
      - "backend/**"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      # MongoDB服务
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Redis服务
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: backend/package.json

      - name: 清理环境
        run: |
          echo "清理环境..."
          rm -rf node_modules package-lock.json yarn.lock
          rm -rf coverage .nyc_output
          rm -f babel.config.cjs jest.config.cjs
          # 确保删除可能导致问题的文件
          rm -f babel-virtual-resolve-base.js babel-resolver.js

      - name: 安装依赖
        run: |
          echo "安装项目依赖..."
          npm ci

          # 显示安装的依赖
          npm list --depth=0

      - name: 验证Babel插件
        run: |
          echo "验证Babel插件..."
          npm list @babel/plugin-transform-modules-commonjs

          # 确认模块可以被加载
          node -e "try { require('@babel/plugin-transform-modules-commonjs'); console.log('模块加载成功'); } catch(e) { console.error('模块加载失败:', e); process.exit(1); }"

      - name: 创建测试文件
        run: |
          echo "创建简单测试文件..."
          mkdir -p src/tests/unit
          cat > src/tests/unit/simple.test.js << 'EOL'
          describe('简单测试', () => {
            it('应该通过', () => {
              expect(true).toBe(true);
            });
          });
          EOL

      - name: 运行简单测试
        run: |
          echo "运行简单测试..."
          NODE_ENV=test npx jest src/tests/unit/simple.test.js --verbose
        env:
          CI: true
          NODE_ENV: test
          DEBUG: "jest,jest-worker,babel:*"
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: 运行所有测试
        run: |
          echo "运行所有测试..."
          NODE_ENV=test npx jest --verbose
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test_secret
          MONGO_URI: mongodb://localhost:27017/chainintelai_test
          DEBUG: "jest,jest-worker,babel:*"
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: 上传测试覆盖率报告
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage/
