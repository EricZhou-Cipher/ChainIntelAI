name: Backend CI/CD Minimal

on:
  push:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "yarn"
          cache-dependency-path: backend/yarn.lock

      - name: 显示环境信息
        run: |
          node -v
          yarn -v
          ls -la
          pwd
          echo "GitHub Actions环境信息："
          env | grep -E "GITHUB|NODE|PATH|RUNNER"

      - name: 创建极简测试文件
        run: |
          mkdir -p src/tests/unit
          echo 'describe("基本JS测试", () => { test("1+1=2", () => { expect(1+1).toBe(2); }); });' > src/tests/unit/basic.test.js

      - name: 安装依赖
        run: |
          echo "使用yarn安装依赖..."
          yarn install --frozen-lockfile

          echo "在node_modules中创建指定目录结构..."
          mkdir -p node_modules/@babel/plugin-transform-modules-commonjs/lib
          echo 'module.exports = function() { return {}; };' > node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js
          echo '{"name":"@babel/plugin-transform-modules-commonjs","version":"7.24.0"}' > node_modules/@babel/plugin-transform-modules-commonjs/package.json

          echo "显示node_modules/@babel目录："
          ls -la node_modules/@babel/

      - name: 创建极简babel配置
        run: |
          cat > babel.config.js << 'EOF'
          module.exports = {
            presets: [
              ['@babel/preset-env', { targets: { node: 'current' }, modules: 'commonjs' }],
              '@babel/preset-typescript'
            ],
            plugins: [
              '@babel/plugin-transform-runtime',
              '@babel/plugin-transform-modules-commonjs'
            ]
          };
          EOF
          echo "创建的babel.config.js内容："
          cat babel.config.js

      - name: 创建极简jest配置
        run: |
          cat > jest.config.js << 'EOF'
          module.exports = {
            testEnvironment: 'node',
            transform: {
              '^.+\\.(js|jsx)$': ['babel-jest', { configFile: './babel.config.js' }]
            },
            moduleFileExtensions: ['js', 'json', 'node'],
            testMatch: ['**/tests/unit/**/*.test.js'],
            verbose: true,
            modulePaths: ['<rootDir>/node_modules'],
            moduleDirectories: ['node_modules']
          };
          EOF
          echo "创建的jest.config.js内容："
          cat jest.config.js

      - name: 验证包安装
        run: |
          echo "验证关键依赖安装："
          node -e "console.log('模块路径:', module.paths)"
          node -e "try { console.log('@babel/plugin-transform-modules-commonjs 路径:', require.resolve('@babel/plugin-transform-modules-commonjs')); } catch(e) { console.error('未找到模块:', e.message); }"

          echo "手动创建的模块信息："
          ls -la node_modules/@babel/plugin-transform-modules-commonjs/
          cat node_modules/@babel/plugin-transform-modules-commonjs/package.json

          echo "测试直接导入模块:"
          node -e "try { const plugin = require('@babel/plugin-transform-modules-commonjs'); console.log('导入成功，插件类型:', typeof plugin); } catch(e) { console.error('导入失败:', e.message); }"

      - name: 启用SSH调试（无论成功或失败）
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
