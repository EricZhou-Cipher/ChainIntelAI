name: 遥测持续集成 (禁用)

on:
  # 仅在手动触发且提供特定密钥时运行
  workflow_dispatch:
    inputs:
      run_key:
        description: '运行密钥'
        required: true

jobs:
  telemetry-tests:
    # 添加条件使其永远不会运行
    if: github.event.inputs.run_key == 'special_run_key_20231231'
    name: 遥测测试
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'backend/yarn.lock'

      - name: 安装依赖
        working-directory: ./backend
        run: |
          yarn install --frozen-lockfile
          yarn add --dev @babel/plugin-transform-modules-commonjs
          yarn list @babel/plugin-transform-modules-commonjs

      - name: 检查配置文件
        working-directory: ./backend
        run: |
          ls -la
          echo "创建 babel.config.js"
          echo 'module.exports = {
            presets: [
              ["@babel/preset-env", { targets: { node: "current" } }],
              "@babel/preset-typescript",
            ],
            plugins: [
              "@babel/plugin-transform-modules-commonjs",
            ],
          };' > babel.config.js
          echo "创建 .babelrc"
          echo '{
            "presets": [
              ["@babel/preset-env", { "targets": { "node": "current" } }],
              "@babel/preset-typescript"
            ],
            "plugins": [
              "@babel/plugin-transform-modules-commonjs"
            ]
          }' > .babelrc
          cat babel.config.js
          cat .babelrc
          cat jest.config.cjs

      - name: 运行 OpenTelemetry 测试
        working-directory: ./backend
        run: |
          NODE_ENV=test yarn jest --testMatch="**/tests/**/*telemetry*.test.ts" --config=jest.config.cjs --verbose --no-cache
        env:
          NODE_ENV: test
          DEBUG: 'true'

      - name: 上传测试报告
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: telemetry-test-report
          path: backend/coverage/
